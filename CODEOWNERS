# GitFlame отслеживает файл владельцев кода (CODEOWNERS) и ищет его в ветке в следующих местах в указанном порядке:

# 1. ./CODEOWNERS
# 2. ./docs/CODEOWNERS
# 3. ./.gitflame/CODEOWNERS

# Поиск прекращается при нахождении первого файла.

# Пример: Назначение нескольких владельцев кода для файлов .go:
.*\\.go @user1 @user2 # Это комментарий

# Этот шаблон означает, что любой файл с расширением .go
# в любом месте репозитория будет назначен на @user1 и @user2.
# Примеры таких файлов:
# - main.go
# - src/module/example.go

# Пример: Назначение нескольких владельцев кода для файлов в папке "frontend/src":
frontend/src/.*\\.js @user3 @user4

# Этот шаблон указывает, что все файлы с расширением .js, находящиеся в папке "frontend/src"
# и во всех её подкаталогах, будут назначены на @user3 и @user4.
# Примеры таких файлов:
# - frontend/src/app.js
# - frontend/src/utils/helpers.js
# - frontend/src/components/button/button.js

# Пример: Использование отрицательного шаблона
!frontend/src/excluded/.* @user5

# Этот шаблон исключает файлы, находящиеся в папке "frontend/src/excluded"
# и во всех её подкаталогах. Эти файлы будут назначены на @user5.
# Примеры таких файлов:
# - frontend/src/excluded/test.js
# - frontend/src/excluded/subfolder/file.js

# Пример: Использование регулярных выражений языка Go
docs/[^/]*\\.(md|txt) @user6

# Этот шаблон назначает все файлы с расширениями .md или .txt,
# находящиеся непосредственно в папке "docs" (не в подкаталогах),
# на пользователя @user6.
# Примеры таких файлов:
# - docs/readme.md
# - docs/guide.txt
# Исключения:
# - docs/subfolder/info.md (не попадёт под шаблон, так как находится в подкаталоге)

# Пример: Символы #, пробел и \ можно экранировать с помощью "\":
# dir/with\#hashtag @user1
# path\ with\ space @user2
# path/with\\backslash @user3

# Пример: Некоторые символы (.+*?()|[]{}^$\) нужно экранировать с помощью "\\":
# path/\\.with\\.dots
# path/with\\+plus

# Эти строки показывают, как правильно экранировать специальные символы в регулярных выражениях.
# Примеры:
# - path/.with.dots (файл будет назначен на @user1, если шаблон соответствует)
# - path/with+plus (файл будет назначен на @user2, если шаблон соответствует)
